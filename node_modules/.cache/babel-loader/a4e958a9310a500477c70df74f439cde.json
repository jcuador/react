{"ast":null,"code":"import _slicedToArray from \"D:\\\\TFG\\\\reactfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport * as r from \"react\";\nvar s = r.createContext(null);\nfunction a() {\n  return {\n    groups: new Map(),\n    get: function get(n, t) {\n      var c;\n      var e = this.groups.get(n);\n      e || (e = new Map(), this.groups.set(n, e));\n      var l = (c = e.get(t)) != null ? c : 0;\n      e.set(t, l + 1);\n      var o = Array.from(e.keys()).indexOf(t);\n      function i() {\n        var u = e.get(t);\n        u > 1 ? e.set(t, u - 1) : e.delete(t);\n      }\n      return [o, i];\n    }\n  };\n}\nfunction C(_ref) {\n  var n = _ref.children;\n  var t = r.useRef(a());\n  return r.createElement(s.Provider, {\n    value: t\n  }, n);\n}\nfunction d(n) {\n  var t = r.useContext(s);\n  if (!t) throw new Error(\"You must wrap your component in a <StableCollection>\");\n  var e = f(),\n    _t$current$get = t.current.get(n, e),\n    _t$current$get2 = _slicedToArray(_t$current$get, 2),\n    l = _t$current$get2[0],\n    o = _t$current$get2[1];\n  return r.useEffect(function () {\n    return o;\n  }, []), l;\n}\nfunction f() {\n  var l, o, i;\n  var n = (i = (o = (l = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) == null ? void 0 : l.ReactCurrentOwner) == null ? void 0 : o.current) != null ? i : null;\n  if (!n) return Symbol();\n  var t = [],\n    e = n;\n  for (; e;) t.push(e.index), e = e.return;\n  return \"$.\" + t.join(\".\");\n}\nexport { C as StableCollection, d as useStableCollectionIndex };","map":null,"metadata":{},"sourceType":"module"}