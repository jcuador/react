{"ast":null,"code":"import _slicedToArray from \"D:\\\\TFG\\\\reactfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\TFG\\\\reactfront\\\\src\\\\screens\\\\semana.js\";\nimport * as React from 'react';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport axios from 'axios';\nimport { useEffect, useState, Fragment } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport '../styles/semana.css';\nimport { Label } from '@headlessui/react/dist/components/label/label';\nimport { useLayoutEffect } from \"react\";\nvar defaultTheme = createTheme();\nfunction Copyright(props) {\n  return /*#__PURE__*/React.createElement(Typography, Object.assign({\n    variant: \"body2\",\n    color: \"text.secondary\",\n    align: \"center\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }), 'Copyright © ', /*#__PURE__*/React.createElement(Link, {\n    color: \"inherit\",\n    href: \"https://mui.com/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"AlbalatEat\"), ' ', new Date().getFullYear(), '.');\n}\nfunction Semana() {\n  var _this = this;\n  var URI = \"http://localhost:8081/comidas/\";\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    User = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    Day = _useState4[0],\n    setDay = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    vector = _useState6[0],\n    setVector = _useState6[1];\n  var _React$useState = React.useState(\"a\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  var navigate = useNavigate();\n  var namesConst = [];\n  var desayunos = [];\n  var comidas = [];\n  var cenas = [];\n\n  //Para ver cuántos días se han de mostrar\n  var repeat = 0;\n\n  //Para acceder a las cookies\n  var cookies = new Cookies();\n\n  //Para convertir la cookie en JSON\n  var json = JSON.stringify(cookies.get('usuario'));\n\n  //Verificamos que el usuario esté registrado\n  if (json == null) {\n    window.location.href = '/login';\n  }\n\n  //Para convertir el JSON en un objeto de JS\n  var myjson = JSON.parse(json);\n\n  //Se invoca una función que puede modificar el estado de las constantes definidas arriba\n  useEffect(function () {\n    var today = new Date().getDay();\n    //getData();\n  }, []);\n  useLayoutEffect(function () {\n    //check local token or something\n    getData();\n  }, []);\n\n  //procedimiento para obtener comidas de un día concreto para un usuario concreto\n  var getData = function getData() {\n    for (var number = 0; number < 7; i++) {\n      //Obtenemos el día indicado. Number hace referencia al día actual sumándole number días\n      var today = new Date();\n      today.setDate(today.getDate() + number);\n      var year = today.getFullYear();\n      var month = today.getMonth() + 1;\n      var day = today.getDate();\n      var fecha = year + '-' + month + '-' + day;\n      console.log(fecha);\n      //Creamos un vector en el que introducir día, turno de desayuno, turno de comida y turno de cena\n      var vec = {\n        'Dia': fecha,\n        'Desayuno': '',\n        'Comida': '',\n        'Cena': ''\n      };\n\n      //Obtenemos todas las comidas de un día para un usuario\n      var res = axios.get(URI + fecha + '/' + myjson.Usuario);\n\n      //Establecemos las opciones de desayuno, comida y cena del usuario para el día concreto\n      for (var i = 0; i < res.data.length; i++) {\n        var food = res.data[i].Food;\n        var turn = res.data[i].Turn;\n        if (food == 1) {\n          vec.Desayuno = turn;\n        } else if (food == 2) {\n          vec.Comida = turn;\n        } else {\n          vec.Cena = turn;\n        }\n      }\n      vec.Dia = fecha;\n      vector.push(vec);\n      setDay(fecha);\n      console.log(\"Funciona\" + vector.length);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: defaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    class: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"#\"), vector.map(function (value, i) {\n    //Devuelve día por día\n    //Para cada día habrá que crear un vector que contenga el turno de desayuno, comida y cena\n    //Para cada día habrá que crear un header con el día y \n    var dia = new Date(value.Dia).getDay();\n    var ndia = new Date(value.Dia).getDate();\n    var nmes = new Date(value.Dia).getMonth();\n    var nombresS = ['DOMINGO', 'LUNES', 'MARTES', 'MIÉRCOLES', 'JUEVES', 'VIERNES', 'SÁBADO'];\n    var nombresM = ['ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO', 'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE'];\n    desayunos[i] = value.Desayuno;\n    comidas[i] = value.Comida;\n    cenas[i] = value.Cena;\n    return /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, nombresS[dia], \", \", ndia);\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"Desayuno\"), desayunos.map(function (val, i) {\n    console.log(val);\n    if (val == 1) {\n      val = 'Temprano';\n    } else if (val == 2) {\n      val = 'Normal';\n    } else if (val == 3) {\n      val = 'Tarde';\n    } else {\n      val = '-';\n    }\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, val);\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"Comida\"), comidas.map(function (val, i) {\n    console.log(val);\n    if (val == 1) {\n      val = 'Temprano';\n    } else if (val == 2) {\n      val = 'Normal';\n    } else if (val == 3) {\n      val = 'Tarde';\n    } else {\n      val = '-';\n    }\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, val);\n  })), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"Cena\"), cenas.map(function (val, i) {\n    console.log(val);\n    if (val == 1) {\n      val = 'Temprano';\n    } else if (val == 2) {\n      val = 'Normal';\n    } else if (val == 3) {\n      val = 'Tarde';\n    } else {\n      val = '-';\n    }\n    return /*#__PURE__*/React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }, val);\n  }))))));\n}\nexport default Semana;\n\n/*return (\r\n    <div>\r\n    <ThemeProvider theme={defaultTheme}>\r\n    <Grid container component=\"main\" sx={{ height: '100vh'}}>\r\n      <CssBaseline />\r\n      <Grid item xs={12} sm={8} md={12} component={Paper} elevation={6} backgroundColor= 'white' square>\r\n        <Box\r\n          sx={{\r\n            my: 8,\r\n            mx: 4,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            backgroundColor: 'white'\r\n          }}\r\n        >\r\n        <table>\r\n            <tr>\r\n        {vector.map((value, i) => {\r\n            //Devuelve día por día\r\n            //Para cada día habrá que crear un vector que contenga el turno de desayuno, comida y cena\r\n            //Para cada día habrá que crear un header con el día y \r\n            var dia = new Date(value.Dia).getDay();\r\n            var ndia = new Date(value.Dia).getDate();\r\n            var nmes = new Date(value.Dia).getMonth();\r\n            var nombresS = ['DOMINGO', 'LUNES', 'MARTES', 'MIÉRCOLES', 'JUEVES', 'VIERNES', 'SÁBADO'];\r\n            var nombresM = ['ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO', 'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE'];\r\n            desayunos[i] = value.Desayuno;\r\n            comidas[i] = value.Comida;\r\n            cenas[i] = value.Cena;\r\n            return (\r\n                <span>\r\n                    <th>{nombresS[dia]}, {ndia}</th>\r\n                </span>\r\n            )})}\r\n            </tr>\r\n\r\n            <tr>\r\n                {desayunos.map((val, i) => {\r\n                    return(<td>{val}</td>)\r\n                })}\r\n            </tr>\r\n            </table>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n    </ThemeProvider>\r\n  </div>\r\n  );*/","map":{"version":3,"names":["React","CssBaseline","Link","Paper","Box","Grid","Typography","createTheme","ThemeProvider","axios","useEffect","useState","Fragment","useNavigate","Cookies","Label","useLayoutEffect","defaultTheme","Copyright","props","createElement","Object","assign","variant","color","align","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","href","Date","getFullYear","Semana","_this","URI","_useState","_useState2","_slicedToArray","User","setUser","_useState3","_useState4","Day","setDay","_useState5","_useState6","vector","setVector","_React$useState","_React$useState2","value","setValue","navigate","namesConst","desayunos","comidas","cenas","repeat","cookies","json","JSON","stringify","get","window","location","myjson","parse","today","getDay","getData","number","i","setDate","getDate","year","month","getMonth","day","fecha","console","log","vec","res","Usuario","data","length","food","Food","turn","Turn","Desayuno","Comida","Cena","Dia","push","className","theme","class","scope","map","dia","ndia","nmes","nombresS","nombresM","val"],"sources":["D:/TFG/reactfront/src/screens/semana.js"],"sourcesContent":["import * as React from 'react';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Link from '@mui/material/Link';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport axios from 'axios'\r\nimport { useEffect, useState, Fragment} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport Cookies from 'universal-cookie'\r\nimport '../styles/semana.css'  \r\nimport { Label } from '@headlessui/react/dist/components/label/label';\r\nimport { useLayoutEffect } from \"react\";\r\n\r\n\r\nconst defaultTheme = createTheme();\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        AlbalatEat\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction Semana() {\r\n\r\n\r\n    const URI = \"http://localhost:8081/comidas/\"\r\n\r\n    const [User, setUser] = useState('');\r\n    const [Day, setDay] = useState('');\r\n    const [vector, setVector] = useState([]);   \r\n    const [value, setValue] = React.useState(\"a\");\r\n    const navigate = useNavigate();\r\n    var namesConst = [];\r\n    var desayunos = [];\r\n    var comidas = [];\r\n    var cenas = [];\r\n\r\n    //Para ver cuántos días se han de mostrar\r\n    var repeat = 0;\r\n\r\n    //Para acceder a las cookies\r\n    const cookies = new Cookies();\r\n\r\n    //Para convertir la cookie en JSON\r\n    var json = JSON.stringify(cookies.get('usuario'));\r\n\r\n    //Verificamos que el usuario esté registrado\r\n    if(json==null) {\r\n        window.location.href='/login';\r\n    }\r\n\r\n    //Para convertir el JSON en un objeto de JS\r\n    var myjson = JSON.parse(json);\r\n\r\n    //Se invoca una función que puede modificar el estado de las constantes definidas arriba\r\n    useEffect(() => {\r\n        var today = new Date().getDay(); \r\n        //getData();\r\n    }, [])\r\n\r\n    useLayoutEffect(() => {\r\n        //check local token or something\r\n        getData();\r\n    }, []);\r\n\r\n\r\n    //procedimiento para obtener comidas de un día concreto para un usuario concreto\r\n    const getData = () => {\r\n\r\n        for(var number = 0; number < 7; i++) {\r\n            //Obtenemos el día indicado. Number hace referencia al día actual sumándole number días\r\n            var today = new Date();\r\n            today.setDate(today.getDate() + number);\r\n            var year = today.getFullYear();\r\n            var month = today.getMonth()+1;\r\n            var day = today.getDate();\r\n            var fecha = year + '-' + month + '-' + day;\r\n            console.log(fecha);\r\n            //Creamos un vector en el que introducir día, turno de desayuno, turno de comida y turno de cena\r\n            let vec = {'Dia': fecha, 'Desayuno': '', 'Comida': '', 'Cena': ''};\r\n\r\n            //Obtenemos todas las comidas de un día para un usuario\r\n            const res = axios.get(URI + fecha + '/' + myjson.Usuario);\r\n\r\n            //Establecemos las opciones de desayuno, comida y cena del usuario para el día concreto\r\n            for(var i = 0; i < res.data.length; i++) {\r\n                var food = res.data[i].Food;\r\n                var turn = res.data[i].Turn;\r\n                if(food == 1) {vec.Desayuno = turn;}\r\n                else if(food == 2) {vec.Comida = turn;}\r\n                else {vec.Cena = turn;}\r\n            }\r\n            vec.Dia = fecha;\r\n            vector.push(vec);\r\n            setDay(fecha);\r\n            console.log(\"Funciona\" + vector.length);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='table-responsive'>\r\n        <ThemeProvider theme={defaultTheme}>\r\n        <table class=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope='col'>#</th>\r\n                    {vector.map((value, i) => {\r\n                //Devuelve día por día\r\n                //Para cada día habrá que crear un vector que contenga el turno de desayuno, comida y cena\r\n                //Para cada día habrá que crear un header con el día y \r\n                var dia = new Date(value.Dia).getDay();\r\n                var ndia = new Date(value.Dia).getDate();\r\n                var nmes = new Date(value.Dia).getMonth();\r\n                var nombresS = ['DOMINGO', 'LUNES', 'MARTES', 'MIÉRCOLES', 'JUEVES', 'VIERNES', 'SÁBADO'];\r\n                var nombresM = ['ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO', 'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE'];\r\n                desayunos[i] = value.Desayuno;\r\n                comidas[i] = value.Comida;\r\n                cenas[i] = value.Cena;\r\n                return (\r\n                        <th scope='col'>{nombresS[dia]}, {ndia}</th>\r\n                )})}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope='row'>Desayuno</th>\r\n                    {desayunos.map((val, i) => {\r\n                        console.log(val);\r\n                        if(val == 1) {val = 'Temprano';}\r\n                        else if(val == 2) {val = 'Normal';}\r\n                        else if(val == 3) {val = 'Tarde';}\r\n                        else {val = '-';}\r\n                        return(\r\n                            <td>\r\n                                {val}\r\n                            </td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <th scope='row'>Comida</th>\r\n                    {comidas.map((val, i) => {\r\n                        console.log(val);\r\n                        if(val == 1) {val = 'Temprano';}\r\n                        else if(val == 2) {val = 'Normal';}\r\n                        else if(val == 3) {val = 'Tarde';}\r\n                        else {val = '-';}\r\n                        return(\r\n                            <td>\r\n                                {val}\r\n                            </td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                <tr>\r\n                    <th scope='row'>Cena</th>\r\n                    {cenas.map((val, i) => {\r\n                        console.log(val);\r\n                        if(val == 1) {val = 'Temprano';}\r\n                        else if(val == 2) {val = 'Normal';}\r\n                        else if(val == 3) {val = 'Tarde';}\r\n                        else {val = '-';}\r\n                        return(\r\n                            <td>\r\n                                {val}\r\n                            </td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                \r\n                \r\n            </tbody>\r\n        </table>\r\n        </ThemeProvider>\r\n        </div>\r\n    )\r\n\r\n  \r\n}\r\n\r\nexport default Semana;\r\n\r\n\r\n/*return (\r\n    <div>\r\n    <ThemeProvider theme={defaultTheme}>\r\n    <Grid container component=\"main\" sx={{ height: '100vh'}}>\r\n      <CssBaseline />\r\n      <Grid item xs={12} sm={8} md={12} component={Paper} elevation={6} backgroundColor= 'white' square>\r\n        <Box\r\n          sx={{\r\n            my: 8,\r\n            mx: 4,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            backgroundColor: 'white'\r\n          }}\r\n        >\r\n        <table>\r\n            <tr>\r\n        {vector.map((value, i) => {\r\n            //Devuelve día por día\r\n            //Para cada día habrá que crear un vector que contenga el turno de desayuno, comida y cena\r\n            //Para cada día habrá que crear un header con el día y \r\n            var dia = new Date(value.Dia).getDay();\r\n            var ndia = new Date(value.Dia).getDate();\r\n            var nmes = new Date(value.Dia).getMonth();\r\n            var nombresS = ['DOMINGO', 'LUNES', 'MARTES', 'MIÉRCOLES', 'JUEVES', 'VIERNES', 'SÁBADO'];\r\n            var nombresM = ['ENERO', 'FEBRERO', 'MARZO', 'ABRIL', 'MAYO', 'JUNIO', 'JULIO', 'AGOSTO', 'SEPTIEMBRE', 'OCTUBRE', 'NOVIEMBRE', 'DICIEMBRE'];\r\n            desayunos[i] = value.Desayuno;\r\n            comidas[i] = value.Comida;\r\n            cenas[i] = value.Cena;\r\n            return (\r\n                <span>\r\n                    <th>{nombresS[dia]}, {ndia}</th>\r\n                </span>\r\n            )})}\r\n            </tr>\r\n\r\n            <tr>\r\n                {desayunos.map((val, i) => {\r\n                    return(<td>{val}</td>)\r\n                })}\r\n            </tr>\r\n            </table>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n    </ThemeProvider>\r\n  </div>\r\n  );*/"],"mappings":"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AAG,UAAU;IAAC,CAAC,MAC3B,IAAGA,GAAG,IAAI,CAAC,EAAE;MAACA,GAAG,GAAG,QAAQ;IAAC,CAAC,MAC9B,IAAGA,GAAG,IAAI,CAAC,EAAE;MAACA,GAAG,GAAG,OAAO;IAAC,CAAC,MAC7B;MAACA,GAAG,GAAG,GAAG;IAAC;IAChB,oBACI5G,KAAA,CAAAoB,aAAA;MAAAM,MAAA,EAAAU,KAAA;MAAAT,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACK6E,GACD,CAAC;EAEb,CAAC,CACD,CAGD,CACJ,CACQ,CACV,CAAC;AAId;AAEA,eAAezE,MAAM;;AAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}