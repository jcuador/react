{"ast":null,"code":"import { useRef as E, useEffect as m } from \"react\";\nimport { useIsoMorphicEffect as T } from './use-iso-morphic-effect.js';\nimport { getOwnerDocument as N } from '../utils/owner.js';\nfunction F(_ref) {\n  var e = _ref.container,\n    t = _ref.accept,\n    r = _ref.walk,\n    _ref$enabled = _ref.enabled,\n    c = _ref$enabled === void 0 ? !0 : _ref$enabled;\n  var o = E(t),\n    l = E(r);\n  m(function () {\n    o.current = t, l.current = r;\n  }, [t, r]), T(function () {\n    if (!e || !c) return;\n    var n = N(e);\n    if (!n) return;\n    var f = o.current,\n      p = l.current,\n      d = Object.assign(function (i) {\n        return f(i);\n      }, {\n        acceptNode: f\n      }),\n      u = n.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, d, !1);\n    for (; u.nextNode();) p(u.currentNode);\n  }, [e, c, o, l]);\n}\nexport { F as useTreeWalker };","map":null,"metadata":{},"sourceType":"module"}