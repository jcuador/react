{"ast":null,"code":"import _slicedToArray from \"D:\\\\TFG\\\\reactfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"D:\\\\TFG\\\\reactfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"D:\\\\TFG\\\\reactfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\TFG\\\\reactfront\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _Q;\nimport E, { Fragment as F, createContext as C, useContext as I, useEffect as h, useMemo as S, useReducer as N, useRef as g } from \"react\";\nimport { match as x } from '../../utils/match.js';\nimport { forwardRefWithAs as L, render as O, Features as U } from '../../utils/render.js';\nimport { optionalRef as K, useSyncRefs as B } from '../../hooks/use-sync-refs.js';\nimport { useId as _ } from '../../hooks/use-id.js';\nimport { Keys as m } from '../keyboard.js';\nimport { isDisabledReactIssue7711 as G } from '../../utils/bugs.js';\nimport { OpenClosedProvider as j, State as R, useOpenClosed as W } from '../../internal/open-closed.js';\nimport { useResolveButtonType as $ } from '../../hooks/use-resolve-button-type.js';\nimport { getOwnerDocument as J } from '../../utils/owner.js';\nimport { useEvent as A } from '../../hooks/use-event.js';\nimport { startTransition as X } from '../../utils/start-transition.js';\nvar q = function (o) {\n    return o[o.Open = 0] = \"Open\", o[o.Closed = 1] = \"Closed\", o;\n  }(q || {}),\n  z = function (t) {\n    return t[t.ToggleDisclosure = 0] = \"ToggleDisclosure\", t[t.CloseDisclosure = 1] = \"CloseDisclosure\", t[t.SetButtonId = 2] = \"SetButtonId\", t[t.SetPanelId = 3] = \"SetPanelId\", t[t.LinkPanel = 4] = \"LinkPanel\", t[t.UnlinkPanel = 5] = \"UnlinkPanel\", t;\n  }(z || {});\nvar Q = (_Q = {}, _defineProperty(_Q, 0, function _(e) {\n    var _x;\n    return _objectSpread({}, e, {\n      disclosureState: x(e.disclosureState, (_x = {}, _defineProperty(_x, 0, 1), _defineProperty(_x, 1, 0), _x))\n    });\n  }), _defineProperty(_Q, 1, function _(e) {\n    return e.disclosureState === 1 ? e : _objectSpread({}, e, {\n      disclosureState: 1\n    });\n  }), _defineProperty(_Q, 4, function _(e) {\n    return e.linkedPanel === !0 ? e : _objectSpread({}, e, {\n      linkedPanel: !0\n    });\n  }), _defineProperty(_Q, 5, function _(e) {\n    return e.linkedPanel === !1 ? e : _objectSpread({}, e, {\n      linkedPanel: !1\n    });\n  }), _defineProperty(_Q, 2, function _(e, n) {\n    return e.buttonId === n.buttonId ? e : _objectSpread({}, e, {\n      buttonId: n.buttonId\n    });\n  }), _defineProperty(_Q, 3, function _(e, n) {\n    return e.panelId === n.panelId ? e : _objectSpread({}, e, {\n      panelId: n.panelId\n    });\n  }), _Q),\n  k = C(null);\nk.displayName = \"DisclosureContext\";\nfunction M(e) {\n  var n = I(k);\n  if (n === null) {\n    var o = new Error(\"<\".concat(e, \" /> is missing a parent <Disclosure /> component.\"));\n    throw Error.captureStackTrace && Error.captureStackTrace(o, M), o;\n  }\n  return n;\n}\nvar v = C(null);\nv.displayName = \"DisclosureAPIContext\";\nfunction w(e) {\n  var n = I(v);\n  if (n === null) {\n    var o = new Error(\"<\".concat(e, \" /> is missing a parent <Disclosure /> component.\"));\n    throw Error.captureStackTrace && Error.captureStackTrace(o, w), o;\n  }\n  return n;\n}\nvar H = C(null);\nH.displayName = \"DisclosurePanelContext\";\nfunction V() {\n  return I(H);\n}\nfunction Y(e, n) {\n  return x(n.type, Q, e, n);\n}\nvar Z = F;\nfunction ee(e, n) {\n  var _x2;\n  var _e$defaultOpen = e.defaultOpen,\n    o = _e$defaultOpen === void 0 ? !1 : _e$defaultOpen,\n    u = _objectWithoutProperties(e, [\"defaultOpen\"]),\n    T = g(null),\n    l = B(n, K(function (a) {\n      T.current = a;\n    }, e.as === void 0 || e.as === F)),\n    t = g(null),\n    f = g(null),\n    s = N(Y, {\n      disclosureState: o ? 0 : 1,\n      linkedPanel: !1,\n      buttonRef: f,\n      panelRef: t,\n      buttonId: null,\n      panelId: null\n    }),\n    _s = _slicedToArray(s, 2),\n    _s$ = _s[0],\n    i = _s$.disclosureState,\n    c = _s$.buttonId,\n    D = _s[1],\n    d = A(function (a) {\n      D({\n        type: 1\n      });\n      var r = J(T);\n      if (!r || !c) return;\n      var p = function () {\n        return a ? a instanceof HTMLElement ? a : a.current instanceof HTMLElement ? a.current : r.getElementById(c) : r.getElementById(c);\n      }();\n      p == null || p.focus();\n    }),\n    P = S(function () {\n      return {\n        close: d\n      };\n    }, [d]),\n    b = S(function () {\n      return {\n        open: i === 0,\n        close: d\n      };\n    }, [i, d]),\n    y = {\n      ref: l\n    };\n  return E.createElement(k.Provider, {\n    value: s\n  }, E.createElement(v.Provider, {\n    value: P\n  }, E.createElement(j, {\n    value: x(i, (_x2 = {}, _defineProperty(_x2, 0, R.Open), _defineProperty(_x2, 1, R.Closed), _x2))\n  }, O({\n    ourProps: y,\n    theirProps: u,\n    slot: b,\n    defaultTag: Z,\n    name: \"Disclosure\"\n  }))));\n}\nvar te = \"button\";\nfunction ne(e, n) {\n  var o = _(),\n    _e$id = e.id,\n    u = _e$id === void 0 ? \"headlessui-disclosure-button-\".concat(o) : _e$id,\n    T = _objectWithoutProperties(e, [\"id\"]),\n    _M = M(\"Disclosure.Button\"),\n    _M2 = _slicedToArray(_M, 2),\n    l = _M2[0],\n    t = _M2[1],\n    f = V(),\n    s = f === null ? !1 : f === l.panelId,\n    i = g(null),\n    c = B(i, n, s ? null : l.buttonRef);\n  h(function () {\n    if (!s) return t({\n      type: 2,\n      buttonId: u\n    }), function () {\n      t({\n        type: 2,\n        buttonId: null\n      });\n    };\n  }, [u, t, s]);\n  var D = A(function (r) {\n      var p;\n      if (s) {\n        if (l.disclosureState === 1) return;\n        switch (r.key) {\n          case m.Space:\n          case m.Enter:\n            r.preventDefault(), r.stopPropagation(), t({\n              type: 0\n            }), (p = l.buttonRef.current) == null || p.focus();\n            break;\n        }\n      } else switch (r.key) {\n        case m.Space:\n        case m.Enter:\n          r.preventDefault(), r.stopPropagation(), t({\n            type: 0\n          });\n          break;\n      }\n    }),\n    d = A(function (r) {\n      switch (r.key) {\n        case m.Space:\n          r.preventDefault();\n          break;\n      }\n    }),\n    P = A(function (r) {\n      var p;\n      G(r.currentTarget) || e.disabled || (s ? (t({\n        type: 0\n      }), (p = l.buttonRef.current) == null || p.focus()) : t({\n        type: 0\n      }));\n    }),\n    b = S(function () {\n      return {\n        open: l.disclosureState === 0\n      };\n    }, [l]),\n    y = $(e, i),\n    a = s ? {\n      ref: c,\n      type: y,\n      onKeyDown: D,\n      onClick: P\n    } : {\n      ref: c,\n      id: u,\n      type: y,\n      \"aria-expanded\": e.disabled ? void 0 : l.disclosureState === 0,\n      \"aria-controls\": l.linkedPanel ? l.panelId : void 0,\n      onKeyDown: D,\n      onKeyUp: d,\n      onClick: P\n    };\n  return O({\n    ourProps: a,\n    theirProps: T,\n    slot: b,\n    defaultTag: te,\n    name: \"Disclosure.Button\"\n  });\n}\nvar le = \"div\",\n  oe = U.RenderStrategy | U.Static;\nfunction re(e, n) {\n  var o = _(),\n    _e$id2 = e.id,\n    u = _e$id2 === void 0 ? \"headlessui-disclosure-panel-\".concat(o) : _e$id2,\n    T = _objectWithoutProperties(e, [\"id\"]),\n    _M3 = M(\"Disclosure.Panel\"),\n    _M4 = _slicedToArray(_M3, 2),\n    l = _M4[0],\n    t = _M4[1],\n    _w = w(\"Disclosure.Panel\"),\n    f = _w.close,\n    s = B(n, l.panelRef, function (P) {\n      X(function () {\n        return t({\n          type: P ? 4 : 5\n        });\n      });\n    });\n  h(function () {\n    return t({\n      type: 3,\n      panelId: u\n    }), function () {\n      t({\n        type: 3,\n        panelId: null\n      });\n    };\n  }, [u, t]);\n  var i = W(),\n    c = function () {\n      return i !== null ? (i & R.Open) === R.Open : l.disclosureState === 0;\n    }(),\n    D = S(function () {\n      return {\n        open: l.disclosureState === 0,\n        close: f\n      };\n    }, [l, f]),\n    d = {\n      ref: s,\n      id: u\n    };\n  return E.createElement(H.Provider, {\n    value: l.panelId\n  }, O({\n    ourProps: d,\n    theirProps: T,\n    slot: D,\n    defaultTag: le,\n    features: oe,\n    visible: c,\n    name: \"Disclosure.Panel\"\n  }));\n}\nvar se = L(ee),\n  ue = L(ne),\n  ie = L(re),\n  ve = Object.assign(se, {\n    Button: ue,\n    Panel: ie\n  });\nexport { ve as Disclosure };","map":null,"metadata":{},"sourceType":"module"}